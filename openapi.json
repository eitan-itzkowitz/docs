
{
  "openapi": "3.0.3",\
  "info": \{\
    "title": "Puzzle Api",\
    "description": "Puzzle Api",\
    "version": "0"\
  \},\
  "servers": [\
    \{\
      "url": "/rest/v0"\
    \}\
  ],\
  "paths": \{\
    "/company/:id/accounts": \{\
      "get": \{\
        "operationId": "financialAccounts",\
        "description": "Retrieves a list of all of the company's financial accounts.\\n\\nRequired scope: read:company",\
        "summary": "Get Financial Accounts | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/FinancialAccountsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/FinancialAccountsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "createFinancialAccount",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreates a financial account for the specified Puzzle company.\\n\\nThe created account will have a status of Syncing until data is added to it, then it will be Ready. Please allow a couple of minutes for this status to update after the data has been added to the account.\\n\\nThe type of data that can be added to an account depends on the account type.\\n\\nRequired scope: write:account",\
        "summary": "Create Financial Account | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateFinancialAccountInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateFinancialAccountResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/accounts/balances": \{\
      "get": \{\
        "operationId": "balances",\
        "description": "Returns the balances on a company's financial accounts on the provided dates. A balance is the balance on the account at the start of the day provided.\\n\\nIf we have an official institution account balance for that date, we will use the institution's provided account balance. If the institution has not provided an account balance for the requested date, we will calculate the balance by summing transactions in the account that have occurred between the target data and the closest balance we have available.\\n\\nNote that Puzzle stores all account balances trending towards positive, regardless of account type. Additional details can be found here.\\n\\nIf any of the company accounts are currently syncing or processing, this endpoint will return a 409 error.\\n\\nYou can check the status of an account in the company object on the FinancialInstitutionAccount object. If the status is UpToDate then these balances can be retrieved without error.\\n\\nRequired scope: read:company",\
        "summary": "Get Financial Account Balances | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/BalancesInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/BalancesResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "createAccountBalance",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate a balance for a financial account.\\n\\nNote that Puzzle stores all account balances trending towards positive, regardless of account type. Additional details can be found here.\\n\\nRequired scope: write:account_balance",\
        "summary": "Create Account Balance | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateAccountBalanceInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateAccountBalanceResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/vendors": \{\
      "get": \{\
        "operationId": "vendors",\
        "description": "Retrieves a list of all of the company's vendors.\\n\\nRequired scope: read:company",\
        "summary": "Get Vendors | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/GetVendorsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/VendorPaginator"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/requests": \{\
      "get": \{\
        "operationId": "requests",\
        "description": "Retrieve a list of requests in a company.",\
        "summary": "Get Requests | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/RequestsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/RequestsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/vendor-spending-report": \{\
      "get": \{\
        "operationId": "vendorSpendingReportApi",\
        "description": "Retrieves a report of the company's vendor spending.\\n\\nRequired scope: read:company",\
        "summary": "Get Vendor Spending Report | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/VendorSpendingReportApiInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/VendorSpendingReportResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/metrics/expenses": \{\
      "get": \{\
        "operationId": "expenseMetrics",\
        "description": "Retrieves a summary of a company's expenses for a given time span, broken into chunks as specified in the 'interval' param\\n\\nCurrently only the 'month' interval is supported, but will soon support 'quarter' and 'year'.\\n\\nThe array of metrics will be returned in ascending order from earliest time interval to latest.",\
        "summary": "Get Expense Metrics | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/ExpenseMetricsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/ExpenseMetricsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/metrics/revenue": \{\
      "get": \{\
        "operationId": "revenueMetrics",\
        "description": "Retrieves a summary of a company's revenue for a given time span, broken into chunks as specified in the 'interval' param. We will soon support additional revenue metrics such as ARR and accrual-based ARR.\\n\\nCurrently only the 'month' interval is supported, but will soon support 'quarter' and 'year'.\\n\\nThe array of metrics will be returned in ascending order from earliest time interval to latest.\\n\\nRequired scope: read:company",\
        "summary": "Get Revenue Metrics | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/RevenueMetricsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/RevenueMetricsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/metrics/employee": \{\
      "get": \{\
        "operationId": "employeeMetrics",\
        "description": "Retrieves a summary of a company's employees for a given time span, broken into chunks as specified in the 'interval' param. The metrics are currently across all departments. We will support filtering by department in the near future.\\n\\nCurrently only the 'month' interval is supported, but will soon support 'quarter' and 'year'.\\n\\nThe array of metrics will be returned in ascending order from earliest time interval to latest.\\n\\nRequired scope: read:company",\
        "summary": "Get Employee Metrics | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/EmployeeMetricsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/EmployeeMetricsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/linkToken": \{\
      "post": \{\
        "operationId": "createTemporaryLinkToken",\
        "description": "This authentication method has been deprecated. Please use the Authentication endpoints instead. Additional details can be found here.\\n\\nCreates a link token that can be used to authenticate a user when directing them to the connection flow. The token expires after 30 minutes.\\n\\nAfter obtaining your link token, create a link to Puzzle so the user can connect their Puzzle account.\\n\\n<a \\n  href=\\"https://staging.southparkdata.com/connect/\{your_company_name\}\\n\\t?token=\{link_token\}\\n\\t&redirect_uri=\{your_redirect_uri\}\\"\\n>\\n  Connect your Puzzle account\\n</a>\\n\\nThey will see your welcome page and an opportunity to log in or sign up with Puzzle.",\
        "summary": "Fetch a Link Token | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateLinkInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateTemporaryLinkToken"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/me": \{\
      "get": \{\
        "operationId": "me",\
        "description": "Gets information about the current user. Only valid for OAuth connections.",\
        "summary": "Get Current User | Puzzle API",\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/User"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/chartOfAccounts": \{\
      "get": \{\
        "operationId": "chartOfAccounts",\
        "description": "Retrieves the company's chart of accounts (COA), which defines the financial statement categories used for accounting purposes.\\n\\nBy default, all accounts are returned and the balances are calculated using cash basis.\\n\\nRequired scope: read:company",\
        "summary": "Get Chart of Accounts | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/ChartOfAccountsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/ChartOfAccountsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/classifications": \{\
      "get": \{\
        "operationId": "classifications",\
        "description": "Retrieves a list of all classifications available for the calling company.\\n\\nRequires scope: read:company",\
        "summary": "Get Classifications | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/ClassificationsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/ClassificationsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/ledgerAccounts/:ledgerAccountId": \{\
      "get": \{\
        "operationId": "ledgerAccount",\
        "description": "Retrieves a specific account in the company's chart of accounts.\\n\\nBy default, the balances on the account are calculated using cash basis.\\n\\nRequired scope: read:company",\
        "summary": "Get Ledger Account | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/LedgerAccountInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/LedgerAccountResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/workers": \{\
      "get": \{\
        "operationId": "workersList",\
        "description": "Retrieves a list of all of the company's workers, both employees and contractors.\\n\\nRequired scope: read:worker",\
        "summary": "Get Workers | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/WorkersInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/WorkersResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/journalEntries": \{\
      "get": \{\
        "operationId": "journalEntries",\
        "description": "This endpoint is experimental and is subject to change\\n\\nPlease reach out to api@puzzle.io with any questions or feedback\\n\\nRequired scope: read:company",\
        "summary": "Get Journal Entries | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/JournalEntriesInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/JournalEntriesResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "upsertJournalEntry",\
        "description": "This endpoint is experimental and is subject to change\\n\\nPlease reach out to api@puzzle.io with any questions or feedback\\n\\nRequired scope: write:journal\\n\\nJournal entries are the entries made in a company's ledger accounts as a way of recording financial impact. The line items for each journal entry should balance to 0.\\n\\nCreate Journal Entries endpoint creates a Journal Entry into our Gateway and not on our Ledger. Once the Gateway receives a Journal Entry, you get an OK response. Ledger Journal Entries are created async and can be retrieved through the Get Journal Entries endpoint.\\n\\nPuzzle journal entries are immutable. This means that when an update is made, 2 additional journal entries get created - one to reverse the original journal entry and another to reflect the updates. Reversal journal entries can be identified by their description field - they will have descriptions matching \\"Reversal of \{\{journal entry id\}\}\\".\\n\\nAll Puzzle companies have both cash and accrual journal entries; they are distinct populations.",\
        "summary": "Create Journal Entry | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/UpsertPartnerJournalEntryInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/UpsertJournalEntryResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/transactions": \{\
      "get": \{\
        "operationId": "getTransactions",\
        "description": "Get transactions by filter\\n\\nRequired scope: read:company",\
        "summary": "Get Transactions | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/GetTransactionsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/TransactionPaginator"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "createTransactions",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate multiple transactions for a single financial account.\\n\\nYou can create up to 500 transactions per request\\nTransactions can only be added to accounts with the following types: Depository, Credit, Investment, Loan, or PaymentProcessing\\nTransactions are created asynchronously, so the response only includes a mapping of the Puzzle ID to the native ID and the status of the transaction, which will either be pending or duplicate.\\npending = The data for that transaction has been saved and is currently being processed. Please allow a couple of minutes for this transaction to show up in the system.\\nduplicate = There is already a transaction with that same nativeId in the system, so this transaction data was ignored.\\nThe sign on the amount field depends on the account type.\\nAdditional details can be found here.\\nThe category field may or may not directly correspond to an account in the Chart of Accounts. It is used to help Puzzle automatically categorize this transaction. It does not guarantee a specific COA assignment.\\n\\nRequired scope: write:transaction",\
        "summary": "Create Transactions | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateTransactionsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateTransactionsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/transactions/:transactionId": \{\
      "get": \{\
        "operationId": "getTransaction",\
        "description": "Get a single transaction by ID\\n\\nRequired scope: read:company",\
        "summary": "Get Transaction | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/GetTransactionInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/GetTransactionResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "patch": \{\
        "operationId": "updateTransaction",\
        "description": "Updates an existing Transaction\\n\\nRequired scope: write:transaction",\
        "summary": "Update Transaction | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/UpdateTransactionInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/UpdateTransactionResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/departments": \{\
      "get": \{\
        "operationId": "departments",\
        "description": "Retrieves a list of all departments for the given company.\\n\\nRequires scope: read:company",\
        "summary": "Get Departments | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/DepartmentsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/DepartmentsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "createDepartment",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate a department for the given company.\\n\\nDepartments must have a unique name. A 400 error will be thrown if a department with the same name already exists.\\n\\nRequires scope: write:department",\
        "summary": "Create Department | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateDepartmentInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateDepartmentResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/locations": \{\
      "get": \{\
        "operationId": "locations",\
        "description": "Retrieves a list of all locations for the given company.\\n\\nRequires scope: read:company",\
        "summary": "Get Locations | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/LocationsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/LocationsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "createLocation",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate a location for the given company.\\n\\nLocations must be unique. A 400 error will be thrown if a location with the same city, state, and zip code already exists.\\n\\nRequires scope: write:location",\
        "summary": "Create Location | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateLocationInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateLocationResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/contractors": \{\
      "post": \{\
        "operationId": "createContractor",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate a contractor for the given company.\\n\\nRequires scope: write:worker",\
        "summary": "Create Contractor | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateContractorInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateContractorResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/employees": \{\
      "post": \{\
        "operationId": "createEmployee",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate an employee for the given company.\\n\\nRequired scope: write:worker",\
        "summary": "Create Employee | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateEmployeeInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateEmployeeResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/benefits": \{\
      "get": \{\
        "operationId": "benefits",\
        "description": "Retrieves a list of all benefits for the given company. These benefits represent company-level benefits that can have both an employee contribution and a company contribution.\\n\\nPayrolls will reference these benefits and provide details on the employee and company contribution amounts.\\n\\nRequires scope: read:company",\
        "summary": "Get Benefits | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/BenefitsInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/BenefitsResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "post": \{\
        "operationId": "createBenefit",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate a benefit for the given company.\\n\\nRequires scope: write:benefit",\
        "summary": "Create Benefit | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateBenefitInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateBenefitResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/payrolls": \{\
      "post": \{\
        "operationId": "createDetailedPayroll",\
        "description": "This endpoint is experimental and is subject to change\\n\\nClick here for more information.\\n\\nCreate a single payroll.\\n\\nPayrolls can only be added to accounts with the Payroll type.\\nAll the amounts on the top-level payroll object are the totals for all the associated compensations\\nPayrolls must have at least one employeeCompensation OR contractorCompensation\\nThe transactionAmounts field should contain a list of all the amounts for all the non-reimbursement transactions that were used to fund this payroll.\\nIf no transactionAmounts are provided, the companyDebit amount will be used instead\\nPuzzle uses this information to link this payroll with all the transactions that funded it to ensure everything gets represented in the general ledger correctly.\\nPuzzle currently only supports USD currencies\\n\\nRequired scope: write:payroll",\
        "summary": "Create Payroll | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/CreateDetailedPayrollInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/CreateDetailedPayrollResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/payrolls/:payrollId": \{\
      "get": \{\
        "operationId": "getPayroll",\
        "description": "Get a single payroll by ID\\n\\nRequired scope: read:company",\
        "summary": "Get Payroll | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/GetPayrollInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/GetPayrollResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/company/:id/trial-balance": \{\
      "get": \{\
        "operationId": "ledgerReportDownload",\
        "description": "This endpoint is experimental and is subject to change\\n\\nThis endpoint generates a trial balance report. You can specify the time period for the report using either:\\n\\ndateMacro (a predefined date range)\\nstartDate and endDate (a custom date range)\\n\\nIf all three are provided, dateMacro takes precedence.\\n\\nRequired scope: read:company",\
        "summary": "Get Trial Balance Report | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/LedgerReportDownloadInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/LedgerReportDownloadResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \},\
    "/onboarding": \{\
      "post": \{\
        "operationId": "initiatePrefilledOnboarding",\
        "description": "Call this endpoint to pass some company information that is usually asked for during Puzzle's onboarding flow. A URL will be returned. When you redirect your user to this URL, the company information that was passed the original request will be prefilled for them in Puzzle's UI, allowing them to skip a few steps and create their Puzzle account more quickly.",\
        "summary": "Initiate Prefilled Onboarding | Puzzle API",\
        "requestBody": \{\
          "content": \{\
            "application/json": \{\
              "schema": \{\
                "required": [\
                  "input"\
                ],\
                "properties": \{\
                  "input": \{\
                    "$ref": "#/components/schemas/PrefilledOnboardingInput"\
                  \}\
                \}\
              \}\
            \}\
          \}\
        \},\
        "responses": \{\
          "200": \{\
            "description": "OK",\
            "content": \{\
              "application/json": \{\
                "schema": \{\
                  "$ref": "#/components/schemas/PrefilledOnboardingResult"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \}\
    \}\
  \},\
  "components": \{\
    "schemas": \{\
      "Company": \{\
        "type": "object",\
        "required": [\
          "id",\
          "name",\
          "institutionConnections",\
          "status"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "institutionConnections": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/InstitutionConnection"\
            \}\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Ready",\
              "Syncing",\
              "NoData"\
            ]\
          \},\
          "financialSummary": \{\
            "$ref": "#/components/schemas/CompanyFinancialSummary"\
          \},\
          "metadata": \{\
            "$ref": "#/components/schemas/CompanyMetadata"\
          \}\
        \}\
      \},\
      "InstitutionConnection": \{\
        "type": "object",\
        "required": [\
          "institution",\
          "status",\
          "accounts",\
          "createdAt",\
          "updatedAt"\
        ],\
        "properties": \{\
          "institution": \{\
            "$ref": "#/components/schemas/FinancialInstitution"\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "OK",\
              "TemporaryOutage",\
              "Disconnected"\
            ]\
          \},\
          "accounts": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/InstitutionAccount"\
            \}\
          \},\
          "lastSyncedAt": \{\
            "type": "object"\
          \},\
          "createdAt": \{\
            "type": "object"\
          \},\
          "updatedAt": \{\
            "type": "object"\
          \},\
          "fdicCoverage": \{\
            "$ref": "#/components/schemas/FdicCoverage"\
          \},\
          "pathToDetails": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "FinancialInstitution": \{\
        "type": "object",\
        "required": [\
          "name"\
        ],\
        "properties": \{\
          "name": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "InstitutionAccount": \{\
        "type": "object",\
        "required": [\
          "id",\
          "type",\
          "name",\
          "currentBalance",\
          "status",\
          "ingestStatus",\
          "connectionStatus",\
          "pathToDetails"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "Investment",\
              "Invoice",\
              "Credit",\
              "Depository",\
              "Loan",\
              "Other",\
              "PaymentProcessing",\
              "Payroll",\
              "Fintech",\
              "Sweep"\
            ]\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "mask": \{\
            "type": "string"\
          \},\
          "currentBalance": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Syncing",\
              "Ready"\
            ]\
          \},\
          "ingestStatus": \{\
            "type": "string",\
            "enum": [\
              "Syncing",\
              "Ready"\
            ]\
          \},\
          "connectionStatus": \{\
            "type": "string",\
            "enum": [\
              "OK",\
              "TemporaryOutage",\
              "Disconnected"\
            ]\
          \},\
          "lastUpdatedAt": \{\
            "type": "object"\
          \},\
          "subType": \{\
            "type": "string",\
            "enum": [\
              "Annuity",\
              "Brokerage",\
              "BrokerageForMinors",\
              "CD",\
              "Checking",\
              "CreditCard",\
              "EducationSavingsAccount",\
              "HSA",\
              "Investment",\
              "LineOfCredit",\
              "Loan",\
              "MoneyMarket",\
              "Mortgage",\
              "Other",\
              "PayPal",\
              "Prepaid",\
              "ProfitSharingPlan",\
              "Retirement",\
              "Savings",\
              "StockPlan",\
              "Stripe",\
              "TaxAdvantagedInvestment",\
              "Trust",\
              "Unknown",\
              "CashLike"\
            ]\
          \},\
          "pathToDetails": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "Money": \{\
        "type": "object",\
        "required": [\
          "amount",\
          "currency"\
        ],\
        "properties": \{\
          "amount": \{\
            "type": "object"\
          \},\
          "currency": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "FdicCoverage": \{\
        "type": "object",\
        "required": [\
          "status",\
          "depositoryTotal",\
          "estimatedInsuranceCoverage"\
        ],\
        "properties": \{\
          "status": \{\
            "type": "string",\
            "enum": [\
              "AtRisk",\
              "Review",\
              "Covered"\
            ]\
          \},\
          "depositoryTotal": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "estimatedInsuranceCoverage": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "CompanyFinancialSummary": \{\
        "type": "object",\
        "required": [\
          "status",\
          "errors"\
        ],\
        "properties": \{\
          "status": \{\
            "type": "string",\
            "enum": [\
              "InProgress",\
              "Failed",\
              "Ready"\
            ]\
          \},\
          "metrics": \{\
            "$ref": "#/components/schemas/CompanyFinancialSummaryMetrics"\
          \},\
          "updatedAt": \{\
            "type": "object"\
          \},\
          "errors": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/Error"\
            \}\
          \}\
        \}\
      \},\
      "CompanyFinancialSummaryMetrics": \{\
        "type": "object",\
        "required": [\
          "annualAvgFullyLoadedSalaryCostPerEmployee",\
          "annualAvgSalaryCostPerEmployee",\
          "lastMonthAvgFullyLoadedSalaryCostPerEmployee",\
          "lastMonthAvgSalaryCostPerEmployee",\
          "totalCash",\
          "lastMonthOperatingBurn",\
          "lastMonthTotalBurn",\
          "lastMonthBankBurn",\
          "threeMonthAverageOperatingBurn",\
          "threeMonthAverageTotalBurn",\
          "threeMonthAverageBankBurn"\
        ],\
        "properties": \{\
          "annualAvgFullyLoadedSalaryCostPerEmployee": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "annualAvgSalaryCostPerEmployee": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "lastMonthAvgFullyLoadedSalaryCostPerEmployee": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "lastMonthAvgSalaryCostPerEmployee": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalCash": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "runway": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "fundraiseDate": \{\
            "type": "string"\
          \},\
          "cashOutDate": \{\
            "type": "string"\
          \},\
          "lastMonthOperatingBurn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "lastMonthTotalBurn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "lastMonthBankBurn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "threeMonthAverageOperatingBurn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "threeMonthAverageTotalBurn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "threeMonthAverageBankBurn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "runwayUsingThreeMonthAverageTotalBurn": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "cashOutDateUsingThreeMonthAverageTotalBurn": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "Error": \{\
        "type": "object",\
        "required": [\
          "message"\
        ],\
        "properties": \{\
          "message": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CompanyMetadata": \{\
        "type": "object",\
        "required": [\
          "dataCompletenessLevel",\
          "categorization"\
        ],\
        "properties": \{\
          "dataCompletenessLevel": \{\
            "type": "string",\
            "enum": [\
              "Complete",\
              "High",\
              "Medium",\
              "Low"\
            ]\
          \},\
          "categorization": \{\
            "$ref": "#/components/schemas/CategorizationMetadata"\
          \}\
        \}\
      \},\
      "CategorizationMetadata": \{\
        "type": "object",\
        "required": [\
          "percentDollarVolumeCategorized"\
        ],\
        "properties": \{\
          "percentDollarVolumeCategorized": \{\
            "type": "number",\
            "format": "float"\
          \}\
        \}\
      \},\
      "FinancialAccountsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "FinancialAccountsResult": \{\
        "type": "object",\
        "required": [\
          "accounts"\
        ],\
        "properties": \{\
          "accounts": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/InstitutionAccount"\
            \}\
          \}\
        \}\
      \},\
      "CreateFinancialAccountInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "nativeId",\
          "name",\
          "mask",\
          "type",\
          "currency"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "mask": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "Investment",\
              "Invoice",\
              "Credit",\
              "Depository",\
              "Loan",\
              "Other",\
              "PaymentProcessing",\
              "Payroll",\
              "Fintech",\
              "Sweep"\
            ]\
          \},\
          "currency": \{\
            "type": "object"\
          \},\
          "subType": \{\
            "type": "string",\
            "enum": [\
              "Annuity",\
              "Brokerage",\
              "BrokerageForMinors",\
              "CD",\
              "Checking",\
              "CreditCard",\
              "EducationSavingsAccount",\
              "HSA",\
              "Investment",\
              "LineOfCredit",\
              "Loan",\
              "MoneyMarket",\
              "Mortgage",\
              "Other",\
              "PayPal",\
              "Prepaid",\
              "ProfitSharingPlan",\
              "Retirement",\
              "Savings",\
              "StockPlan",\
              "Stripe",\
              "TaxAdvantagedInvestment",\
              "Trust",\
              "Unknown",\
              "CashLike"\
            ]\
          \}\
        \}\
      \},\
      "CreateFinancialAccountResult": \{\
        "type": "object",\
        "required": [\
          "account"\
        ],\
        "properties": \{\
          "account": \{\
            "$ref": "#/components/schemas/InstitutionAccount"\
          \}\
        \}\
      \},\
      "BalancesInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "dates"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "string"\
          \},\
          "accountId": \{\
            "type": "string"\
          \},\
          "dates": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \}\
        \}\
      \},\
      "BalancesResult": \{\
        "type": "object",\
        "required": [\
          "balancesByDate"\
        ],\
        "properties": \{\
          "balancesByDate": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/InstitutionAccountBalancesOnDate"\
            \}\
          \}\
        \}\
      \},\
      "InstitutionAccountBalancesOnDate": \{\
        "type": "object",\
        "required": [\
          "date",\
          "balances",\
          "totalCash"\
        ],\
        "properties": \{\
          "date": \{\
            "type": "string"\
          \},\
          "balances": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/InstitutionAccountBalance"\
            \}\
          \},\
          "totalCash": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "InstitutionAccountBalance": \{\
        "type": "object",\
        "required": [\
          "balance",\
          "date",\
          "derivedFrom"\
        ],\
        "properties": \{\
          "balance": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "date": \{\
            "type": "string"\
          \},\
          "derivedFrom": \{\
            "type": "string",\
            "enum": [\
              "OfficialInstitutionBalance",\
              "Calculated"\
            ]\
          \},\
          "account": \{\
            "$ref": "#/components/schemas/InstitutionAccount"\
          \}\
        \}\
      \},\
      "CreateAccountBalanceInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "accountId",\
          "balance",\
          "timestamp"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "accountId": \{\
            "type": "object"\
          \},\
          "balance": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "availableBalance": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "timestamp": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "MoneyInput": \{\
        "type": "object",\
        "required": [\
          "amount",\
          "currency"\
        ],\
        "properties": \{\
          "amount": \{\
            "type": "object"\
          \},\
          "currency": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "CreateAccountBalanceResult": \{\
        "type": "object",\
        "required": [\
          "balance"\
        ],\
        "properties": \{\
          "balance": \{\
            "$ref": "#/components/schemas/OfficialInstitutionAccountBalance"\
          \}\
        \}\
      \},\
      "OfficialInstitutionAccountBalance": \{\
        "type": "object",\
        "required": [\
          "id",\
          "accountId",\
          "balance",\
          "availableBalance",\
          "timestamp"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "object"\
          \},\
          "accountId": \{\
            "type": "object"\
          \},\
          "balance": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "availableBalance": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "timestamp": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "GetVendorsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "pageInput": \{\
            "$ref": "#/components/schemas/PageInput"\
          \},\
          "filterBy": \{\
            "$ref": "#/components/schemas/VendorFilterBy"\
          \}\
        \}\
      \},\
      "PageInput": \{\
        "type": "object",\
        "required": [\
          "count"\
        ],\
        "properties": \{\
          "count": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "after": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "VendorFilterBy": \{\
        "type": "object",\
        "properties": \{\
          "permaNames": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "is1099Vendor": \{\
            "type": "string",\
            "enum": [\
              "Yes",\
              "No",\
              "Unknown"\
            ]\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "Individual",\
              "Business",\
              "Unknown"\
            ]\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Active",\
              "Inactive",\
              "Unknown"\
            ]\
          \}\
        \}\
      \},\
      "VendorPaginator": \{\
        "type": "object",\
        "required": [\
          "items",\
          "pageInfo"\
        ],\
        "properties": \{\
          "items": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/Vendor"\
            \}\
          \},\
          "pageInfo": \{\
            "$ref": "#/components/schemas/PageInfo"\
          \}\
        \}\
      \},\
      "Vendor": \{\
        "type": "object",\
        "required": [\
          "permaName",\
          "name",\
          "id",\
          "is1099Vendor"\
        ],\
        "properties": \{\
          "permaName": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "id": \{\
            "type": "string"\
          \},\
          "is1099Vendor": \{\
            "type": "string",\
            "enum": [\
              "Yes",\
              "No",\
              "Unknown"\
            ]\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "Individual",\
              "Business",\
              "Unknown"\
            ]\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Active",\
              "Inactive",\
              "Unknown"\
            ]\
          \}\
        \}\
      \},\
      "PageInfo": \{\
        "type": "object",\
        "required": [\
          "hasNextPage"\
        ],\
        "properties": \{\
          "endCursor": \{\
            "type": "string"\
          \},\
          "hasNextPage": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "total": \{\
            "type": "integer",\
            "format": "int32"\
          \}\
        \}\
      \},\
      "RequestsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "statuses": \{\
            "type": "array",\
            "items": \{\
              "type": "string",\
              "enum": [\
                "Cancelled",\
                "Completed",\
                "Open"\
              ]\
            \}\
          \},\
          "transactionIds": \{\
            "type": "array",\
            "items": \{\
              "type": "object"\
            \}\
          \},\
          "types": \{\
            "type": "array",\
            "items": \{\
              "type": "string",\
              "enum": [\
                "CategoryReview",\
                "Documentation",\
                "Message"\
              ]\
            \}\
          \},\
          "requestedUserIds": \{\
            "type": "array",\
            "items": \{\
              "type": "object"\
            \}\
          \},\
          "requestedByUserIds": \{\
            "type": "array",\
            "items": \{\
              "type": "object"\
            \}\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "endDate": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "RequestsResult": \{\
        "type": "object",\
        "properties": \{\
          "requests": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/Request"\
            \}\
          \}\
        \}\
      \},\
      "Request": \{\
        "type": "object",\
        "required": [\
          "transactionId",\
          "status",\
          "type",\
          "requestedByUserId",\
          "createdAt",\
          "updatedAt"\
        ],\
        "properties": \{\
          "transactionId": \{\
            "type": "object"\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Cancelled",\
              "Completed",\
              "Open"\
            ]\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "CategoryReview",\
              "Documentation",\
              "Message"\
            ]\
          \},\
          "requestedByUserId": \{\
            "type": "object"\
          \},\
          "requestedUserId": \{\
            "type": "object"\
          \},\
          "requestedUserEmail": \{\
            "type": "string"\
          \},\
          "message": \{\
            "type": "string"\
          \},\
          "createdAt": \{\
            "type": "object"\
          \},\
          "updatedAt": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "VendorSpendingReportApiInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "startDate",\
          "endDate"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "endDate": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "VendorSpendingReportResult": \{\
        "type": "object",\
        "required": [\
          "title",\
          "columns",\
          "rows"\
        ],\
        "properties": \{\
          "title": \{\
            "type": "string"\
          \},\
          "columns": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "rows": \{\
            "type": "array",\
            "items": \{\
              "type": "array",\
              "items": \{\
                "type": "string"\
              \}\
            \}\
          \}\
        \}\
      \},\
      "ExpenseMetricsInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "timePeriod"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriodInput"\
          \}\
        \}\
      \},\
      "TimePeriodInput": \{\
        "type": "object",\
        "required": [\
          "startDate"\
        ],\
        "properties": \{\
          "endDateExclusive": \{\
            "type": "object"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "interval": \{\
            "type": "string",\
            "enum": [\
              "Month"\
            ]\
          \}\
        \}\
      \},\
      "ExpenseMetricsResult": \{\
        "type": "object",\
        "required": [\
          "metrics"\
        ],\
        "properties": \{\
          "metrics": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/ExpenseMetrics"\
            \}\
          \}\
        \}\
      \},\
      "ExpenseMetrics": \{\
        "type": "object",\
        "required": [\
          "totalExpenses",\
          "totalOperatingExpenses",\
          "timePeriod",\
          "totalOperatingCashOut",\
          "totalNonOperatingCashOut",\
          "totalCashOut",\
          "totalOperatingExpensesPNL",\
          "otherIncomeAndExpenses"\
        ],\
        "properties": \{\
          "totalExpenses": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalOperatingExpenses": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriod"\
          \},\
          "totalOperatingCashOut": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalNonOperatingCashOut": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalCashOut": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalOperatingExpensesPNL": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "otherIncomeAndExpenses": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "TimePeriod": \{\
        "type": "object",\
        "required": [\
          "startDate",\
          "endDateExclusive"\
        ],\
        "properties": \{\
          "startDate": \{\
            "type": "object"\
          \},\
          "endDateExclusive": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "CategorizationMetricsInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "timePeriod"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriodInput"\
          \}\
        \}\
      \},\
      "CategorizationMetricsResult": \{\
        "type": "object",\
        "required": [\
          "metrics"\
        ],\
        "properties": \{\
          "metrics": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/CategorizationMetrics"\
            \}\
          \}\
        \}\
      \},\
      "CategorizationMetrics": \{\
        "type": "object",\
        "required": [\
          "timePeriod",\
          "dataCompletenessLevel",\
          "percentDollarVolumeCategorized"\
        ],\
        "properties": \{\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriod"\
          \},\
          "dataCompletenessLevel": \{\
            "type": "string",\
            "enum": [\
              "Complete",\
              "High",\
              "Medium",\
              "Low"\
            ]\
          \},\
          "percentDollarVolumeCategorized": \{\
            "type": "number",\
            "format": "float"\
          \}\
        \}\
      \},\
      "RevenueMetricsInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "timePeriod"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriodInput"\
          \}\
        \}\
      \},\
      "RevenueMetricsResult": \{\
        "type": "object",\
        "required": [\
          "metrics"\
        ],\
        "properties": \{\
          "metrics": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/RevenueMetrics"\
            \}\
          \}\
        \}\
      \},\
      "RevenueMetrics": \{\
        "type": "object",\
        "required": [\
          "timePeriod",\
          "annualizedRevenue",\
          "totalRevenue",\
          "totalCostOfRevenue",\
          "totalGrossProfit",\
          "totalCashIn",\
          "totalOperatingCashIn",\
          "totalNonOperatingCashIn",\
          "totalOperatingIncome",\
          "totalNetIncome"\
        ],\
        "properties": \{\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriod"\
          \},\
          "annualizedRevenue": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalRevenue": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalCostOfRevenue": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalGrossProfit": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalCashIn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalOperatingCashIn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalNonOperatingCashIn": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalOperatingIncome": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalNetIncome": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "EmployeeMetricsInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "timePeriod"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriodInput"\
          \}\
        \}\
      \},\
      "EmployeeMetricsResult": \{\
        "type": "object",\
        "required": [\
          "metrics"\
        ],\
        "properties": \{\
          "metrics": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeMetrics"\
            \}\
          \}\
        \}\
      \},\
      "EmployeeMetrics": \{\
        "type": "object",\
        "required": [\
          "averageFullyLoadedSalaryCostPerEmployee",\
          "averageSalaryCostPerEmployee",\
          "totalSalaryExpense",\
          "totalFullyLoadedSalaryExpense",\
          "timePeriod"\
        ],\
        "properties": \{\
          "averageFullyLoadedSalaryCostPerEmployee": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "averageSalaryCostPerEmployee": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalSalaryExpense": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "totalFullyLoadedSalaryExpense": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "timePeriod": \{\
            "$ref": "#/components/schemas/TimePeriod"\
          \}\
        \}\
      \},\
      "CreateLinkInput": \{\
        "type": "object",\
        "required": [\
          "user",\
          "company"\
        ],\
        "properties": \{\
          "user": \{\
            "$ref": "#/components/schemas/PuzzleUserInput"\
          \},\
          "company": \{\
            "$ref": "#/components/schemas/PuzzleCompanyInput"\
          \}\
        \}\
      \},\
      "PuzzleUserInput": \{\
        "type": "object",\
        "required": [\
          "email",\
          "name"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "email": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "PuzzleCompanyInput": \{\
        "type": "object",\
        "required": [\
          "id",\
          "name"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "timezone": \{\
            "type": "string"\
          \},\
          "companyType": \{\
            "type": "string",\
            "enum": [\
              "SAAS",\
              "ECOMMERCE",\
              "MARKETPLACE",\
              "ADVERTISING",\
              "SERVICES",\
              "ENTERPRISE",\
              "FINTECH",\
              "FINTECH_CRYPTO",\
              "VIRTUAL_GOODS",\
              "CONSUMER",\
              "NOT_SURE",\
              "OTHER",\
              "AGRICULTURE_AND_FARMING",\
              "CONSTRUCTION",\
              "HEALTHCARE",\
              "HOME_SERVICES",\
              "LEGAL",\
              "MANUFACTURING",\
              "MEDIA_AND_ENTERTAINMENT",\
              "PROFESSIONAL_SERVICES",\
              "RETAIL",\
              "REAL_ESTATE",\
              "RESTAURANT",\
              "TRANSPORTATION",\
              "WHOLESALE_TRADE"\
            ]\
          \},\
          "revenueModel": \{\
            "type": "string",\
            "enum": [\
              "AnnualSubscription",\
              "MonthlySubscription",\
              "MultipleRevenueModels",\
              "NotSure",\
              "PreRevenue",\
              "ServiceBased",\
              "TransactionBased",\
              "UsageBased",\
              "Subscription",\
              "AddOns",\
              "TransactionBasedPhysical",\
              "TransactionBasedOther",\
              "Contracts",\
              "HourlyBilling",\
              "Marketplace",\
              "Commission"\
            ]\
          \}\
        \}\
      \},\
      "CreateTemporaryLinkToken": \{\
        "type": "object",\
        "required": [\
          "linkToken",\
          "companyId"\
        ],\
        "properties": \{\
          "linkToken": \{\
            "type": "string"\
          \},\
          "companyId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "User": \{\
        "type": "object",\
        "required": [\
          "id",\
          "companies"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "companies": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/CompanySummary"\
            \}\
          \}\
        \}\
      \},\
      "CompanySummary": \{\
        "type": "object",\
        "required": [\
          "id",\
          "name",\
          "connectedAt",\
          "status"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "connectedAt": \{\
            "type": "object"\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Ready",\
              "Syncing",\
              "NoData"\
            ]\
          \}\
        \}\
      \},\
      "ChartOfAccountsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "effectiveDate": \{\
            "type": "object"\
          \},\
          "nominalCode": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "ChartOfAccountsResult": \{\
        "type": "object",\
        "required": [\
          "accounts"\
        ],\
        "properties": \{\
          "accounts": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/LedgerAccount"\
            \}\
          \}\
        \}\
      \},\
      "LedgerAccount": \{\
        "type": "object",\
        "required": [\
          "id",\
          "category",\
          "companyId",\
          "displayId",\
          "displayName",\
          "entityId",\
          "keywords",\
          "tags",\
          "type",\
          "views",\
          "coaKeys",\
          "deprecatedCoaKeys",\
          "hidden",\
          "systemOwned",\
          "balances",\
          "isBankAccount"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "currentness": \{\
            "type": "string"\
          \},\
          "category": \{\
            "type": "string",\
            "enum": [\
              "accounts_payable",\
              "accounts_receivable",\
              "accrued_expenses",\
              "accrued_revenue",\
              "bank",\
              "common_stock",\
              "convertible_debt",\
              "cost_of_revenue",\
              "credit_card",\
              "debt",\
              "deposits",\
              "investments",\
              "inventory",\
              "non_operating_expenses",\
              "non_operating_income",\
              "notes_payable",\
              "operating_expenses",\
              "operating_income",\
              "other_assets",\
              "other_equity",\
              "other_liabilities",\
              "preferred_stock",\
              "prepaid_expenses",\
              "retained_earnings",\
              "sales_tax",\
              "suspense",\
              "unbilled_receivables"\
            ]\
          \},\
          "subCategory": \{\
            "type": "string",\
            "enum": [\
              "advertising_and_promotional",\
              "amortization",\
              "bad_debt",\
              "cash_on_hand",\
              "checking",\
              "clearing",\
              "depreciation",\
              "facilities",\
              "general_administrative",\
              "interest",\
              "interest_and_dividend_income",\
              "meals_and_entertainment",\
              "other",\
              "other_employee",\
              "payment_processor",\
              "payroll",\
              "penalties_and_settlements",\
              "professional_services",\
              "savings",\
              "suspense",\
              "taxes",\
              "technology_and_software",\
              "travel"\
            ]\
          \},\
          "tertiaryCategory": \{\
            "type": "string",\
            "enum": [\
              "accounting",\
              "benefits",\
              "bonuses",\
              "clearing",\
              "commissions",\
              "insurance",\
              "legal",\
              "payroll_clearing",\
              "payroll_fees",\
              "payroll_taxes",\
              "rent",\
              "repair_and_maintenance",\
              "retirement",\
              "salaries",\
              "utilities"\
            ]\
          \},\
          "companyId": \{\
            "type": "string"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "displayId": \{\
            "type": "string"\
          \},\
          "displayName": \{\
            "type": "string"\
          \},\
          "entityId": \{\
            "type": "string"\
          \},\
          "keywords": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "parentDisplayId": \{\
            "type": "string"\
          \},\
          "tags": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "asset",\
              "liability",\
              "equity",\
              "revenue",\
              "expense",\
              "contra_asset",\
              "contra_liability",\
              "contra_equity",\
              "contra_revenue",\
              "contra_expense",\
              "gain_or_loss"\
            ]\
          \},\
          "views": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "coaKeys": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "deprecatedCoaKeys": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "hidden": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "systemOwned": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "templateId": \{\
            "type": "string"\
          \},\
          "balances": \{\
            "$ref": "#/components/schemas/LedgerAccountBalances",\
            "requestBodySchema": \{\
              "properties": \{\
                "basis": \{\
                  "type": "string",\
                  "enum": [\
                    "cash",\
                    "accrual"\
                  ]\
                \}\
              \}\
            \}\
          \},\
          "isBankAccount": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "LedgerAccountBalances": \{\
        "type": "object",\
        "required": [\
          "currentBalance",\
          "currentBalanceWithoutSubAccounts"\
        ],\
        "properties": \{\
          "currentBalance": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "currentBalanceWithoutSubAccounts": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "ClassificationsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "ClassificationsResult": \{\
        "type": "object",\
        "required": [\
          "classifications"\
        ],\
        "properties": \{\
          "classifications": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/ClassificationClass"\
            \}\
          \}\
        \}\
      \},\
      "ClassificationClass": \{\
        "type": "object",\
        "required": [\
          "class",\
          "segments"\
        ],\
        "properties": \{\
          "class": \{\
            "type": "object"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "segments": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/ClassificationSegment"\
            \}\
          \}\
        \}\
      \},\
      "ClassificationSegment": \{\
        "type": "object",\
        "required": [\
          "segment"\
        ],\
        "properties": \{\
          "segment": \{\
            "type": "object"\
          \},\
          "description": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "LedgerAccountInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "ledgerAccountId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "ledgerAccountId": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "LedgerAccountResult": \{\
        "type": "object",\
        "required": [\
          "account"\
        ],\
        "properties": \{\
          "account": \{\
            "$ref": "#/components/schemas/LedgerAccount"\
          \}\
        \}\
      \},\
      "WorkersInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "subset": \{\
            "type": "string",\
            "enum": [\
              "Active",\
              "Terminated",\
              "Contractor"\
            ]\
          \},\
          "search": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "WorkersResult": \{\
        "type": "object",\
        "required": [\
          "workers"\
        ],\
        "properties": \{\
          "workers": \{\
            "type": "array",\
            "items": \{\
              "type": "object"\
            \}\
          \}\
        \}\
      \},\
      "JournalEntriesInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "basis": \{\
            "type": "string",\
            "enum": [\
              "cash",\
              "accrual"\
            ]\
          \},\
          "createdAfter": \{\
            "type": "object"\
          \},\
          "limit": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "cursor": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "JournalEntriesResult": \{\
        "type": "object",\
        "required": [\
          "journalEntries"\
        ],\
        "properties": \{\
          "journalEntries": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/LedgerJournal"\
            \}\
          \}\
        \}\
      \},\
      "LedgerJournal": \{\
        "type": "object",\
        "required": [\
          "id",\
          "createdAt",\
          "effectiveAt",\
          "postedAt",\
          "postingPeriod",\
          "companyId",\
          "entityId",\
          "entries",\
          "eventId",\
          "event"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "createdAt": \{\
            "type": "object"\
          \},\
          "effectiveAt": \{\
            "type": "object"\
          \},\
          "postedAt": \{\
            "type": "object"\
          \},\
          "postingPeriod": \{\
            "type": "string"\
          \},\
          "ledger": \{\
            "type": "string"\
          \},\
          "view": \{\
            "type": "string",\
            "enum": [\
              "cash",\
              "accrual"\
            ]\
          \},\
          "companyId": \{\
            "type": "string"\
          \},\
          "entityId": \{\
            "type": "string"\
          \},\
          "reversedJournalId": \{\
            "type": "string"\
          \},\
          "correctionEventId": \{\
            "type": "string"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "extraMetadata": \{\
            "type": "object"\
          \},\
          "entries": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/LedgerEntry"\
            \}\
          \},\
          "sequenceId": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "eventId": \{\
            "type": "string"\
          \},\
          "event": \{\
            "$ref": "#/components/schemas/LedgerEvent"\
          \}\
        \}\
      \},\
      "LedgerEntry": \{\
        "type": "object",\
        "required": [\
          "accountId",\
          "companyId",\
          "createdAt",\
          "effectiveAt",\
          "entityId",\
          "eventId",\
          "id",\
          "journalId",\
          "postedAt"\
        ],\
        "properties": \{\
          "accountId": \{\
            "type": "string"\
          \},\
          "amount": \{\
            "type": "object"\
          \},\
          "companyId": \{\
            "type": "string"\
          \},\
          "counterpartyId": \{\
            "type": "string"\
          \},\
          "counterpartyType": \{\
            "type": "string"\
          \},\
          "createdAt": \{\
            "type": "object"\
          \},\
          "currency": \{\
            "type": "string"\
          \},\
          "departmentId": \{\
            "type": "string"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "effectiveAt": \{\
            "type": "object"\
          \},\
          "entityId": \{\
            "type": "string"\
          \},\
          "eventId": \{\
            "type": "string"\
          \},\
          "extraMetadata": \{\
            "type": "object"\
          \},\
          "id": \{\
            "type": "string"\
          \},\
          "journalId": \{\
            "type": "string"\
          \},\
          "ledger": \{\
            "type": "string"\
          \},\
          "postedAt": \{\
            "type": "object"\
          \},\
          "productId": \{\
            "type": "string"\
          \},\
          "reversedEntryId": \{\
            "type": "string"\
          \},\
          "sequenceId": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "tags": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "view": \{\
            "type": "string",\
            "enum": [\
              "cash",\
              "accrual"\
            ]\
          \}\
        \}\
      \},\
      "LedgerEvent": \{\
        "type": "object",\
        "required": [\
          "id",\
          "externalId",\
          "createdAt",\
          "effectiveAt",\
          "companyId",\
          "entityId",\
          "amount",\
          "currency"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string"\
          \},\
          "externalId": \{\
            "type": "string"\
          \},\
          "createdAt": \{\
            "type": "object"\
          \},\
          "effectiveAt": \{\
            "type": "object"\
          \},\
          "companyId": \{\
            "type": "string"\
          \},\
          "entityId": \{\
            "type": "string"\
          \},\
          "sequenceId": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "extraMetadata": \{\
            "type": "object"\
          \},\
          "source": \{\
            "type": "string"\
          \},\
          "amount": \{\
            "type": "object"\
          \},\
          "currency": \{\
            "type": "string"\
          \},\
          "version": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "schemaVersion": \{\
            "type": "integer",\
            "format": "int32"\
          \},\
          "transaction": \{\
            "$ref": "#/components/schemas/Transaction"\
          \}\
        \}\
      \},\
      "Transaction": \{\
        "type": "object",\
        "required": [\
          "id",\
          "descriptor",\
          "timestamp",\
          "amountAsMoney"\
        ],\
        "properties": \{\
          "memo": \{\
            "type": "string"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "id": \{\
            "type": "string"\
          \},\
          "descriptor": \{\
            "type": "string"\
          \},\
          "timestamp": \{\
            "type": "object"\
          \},\
          "amountAsMoney": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "UpsertPartnerJournalEntryInput": \{\
        "type": "object",\
        "required": [\
          "lines",\
          "basis",\
          "memo"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "object"\
          \},\
          "companyId": \{\
            "type": "object"\
          \},\
          "autoReversalDate": \{\
            "type": "object"\
          \},\
          "postingDate": \{\
            "type": "object"\
          \},\
          "lines": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/UpsertPartnerJournalEntryItemInput"\
            \}\
          \},\
          "basis": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "memo": \{\
            "type": "string"\
          \},\
          "isHistorical": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "createdFor": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "UpsertPartnerJournalEntryItemInput": \{\
        "type": "object",\
        "required": [\
          "amount",\
          "coaKey",\
          "description"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "amount": \{\
            "type": "object"\
          \},\
          "coaKey": \{\
            "type": "string"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "manualJournalEntryId": \{\
            "type": "object"\
          \},\
          "classifications": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/UpsertClassificationInput"\
            \}\
          \},\
          "userDefinedMetadata": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "UpsertClassificationInput": \{\
        "type": "object",\
        "required": [\
          "class",\
          "segment"\
        ],\
        "properties": \{\
          "class": \{\
            "type": "object"\
          \},\
          "segment": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "UpsertJournalEntryResult": \{\
        "type": "object",\
        "required": [\
          "ids"\
        ],\
        "properties": \{\
          "ids": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \}\
        \}\
      \},\
      "GetTransactionsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "pageInput": \{\
            "$ref": "#/components/schemas/PageInput"\
          \},\
          "filterBy": \{\
            "$ref": "#/components/schemas/TransactionsFilterBy"\
          \}\
        \}\
      \},\
      "TransactionsFilterBy": \{\
        "type": "object",\
        "required": [\
          "startDate",\
          "endDate"\
        ],\
        "properties": \{\
          "accountIds": \{\
            "type": "array",\
            "items": \{\
              "type": "object"\
            \}\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "endDate": \{\
            "type": "object"\
          \},\
          "vendorIds": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "coaKeys": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "Finalized",\
              "NotFinalized",\
              "NotCategorized"\
            ]\
          \}\
        \}\
      \},\
      "TransactionPaginator": \{\
        "type": "object",\
        "required": [\
          "nodes",\
          "pageInfo"\
        ],\
        "properties": \{\
          "nodes": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/Transaction"\
            \}\
          \},\
          "pageInfo": \{\
            "$ref": "#/components/schemas/PageInfo"\
          \}\
        \}\
      \},\
      "CreateTransactionsInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "accountId",\
          "transactions"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "accountId": \{\
            "type": "object"\
          \},\
          "transactions": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/CreateTransactionInput"\
            \}\
          \}\
        \}\
      \},\
      "CreateTransactionInput": \{\
        "type": "object",\
        "required": [\
          "nativeId",\
          "timestamp",\
          "amount",\
          "description"\
        ],\
        "properties": \{\
          "nativeId": \{\
            "type": "string"\
          \},\
          "timestamp": \{\
            "type": "object"\
          \},\
          "amount": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "category": \{\
            "type": "string",\
            "enum": [\
              "bank_fees",\
              "bill_pay_clearing",\
              "business_development_and_conferences",\
              "computers_and_hardware",\
              "consultants",\
              "dues_and_subscriptions",\
              "entertainment",\
              "furniture",\
              "hosting",\
              "insurance",\
              "interest_and_dividend_income",\
              "interest_expense",\
              "legal",\
              "other_meals",\
              "payroll",\
              "payroll_fees",\
              "rent",\
              "shipping",\
              "software",\
              "supplies",\
              "tax_and_accounting",\
              "training_and_development",\
              "travel_airfare",\
              "travel_ground_transportation",\
              "travel_lodging",\
              "utilities"\
            ]\
          \},\
          "memo": \{\
            "type": "string"\
          \},\
          "merchantName": \{\
            "type": "string"\
          \},\
          "counterpartyName": \{\
            "type": "string"\
          \},\
          "balance": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \}\
        \}\
      \},\
      "CreateTransactionsResult": \{\
        "type": "object",\
        "required": [\
          "transactions"\
        ],\
        "properties": \{\
          "transactions": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/CreateTransactionResult"\
            \}\
          \}\
        \}\
      \},\
      "CreateTransactionResult": \{\
        "type": "object",\
        "required": [\
          "id",\
          "nativeId",\
          "status"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "status": \{\
            "type": "string",\
            "enum": [\
              "pending",\
              "duplicate"\
            ]\
          \}\
        \}\
      \},\
      "GetTransactionInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "transactionId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "transactionId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "GetTransactionResult": \{\
        "type": "object",\
        "required": [\
          "transaction"\
        ],\
        "properties": \{\
          "transaction": \{\
            "$ref": "#/components/schemas/Transaction"\
          \}\
        \}\
      \},\
      "UpdateTransactionInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "transactionId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "transactionId": \{\
            "type": "object"\
          \},\
          "category": \{\
            "type": "string",\
            "enum": [\
              "bank_fees",\
              "bill_pay_clearing",\
              "business_development_and_conferences",\
              "computers_and_hardware",\
              "consultants",\
              "dues_and_subscriptions",\
              "entertainment",\
              "furniture",\
              "hosting",\
              "insurance",\
              "interest_and_dividend_income",\
              "interest_expense",\
              "legal",\
              "other_meals",\
              "payroll",\
              "payroll_fees",\
              "rent",\
              "shipping",\
              "software",\
              "supplies",\
              "tax_and_accounting",\
              "training_and_development",\
              "travel_airfare",\
              "travel_ground_transportation",\
              "travel_lodging",\
              "utilities"\
            ]\
          \}\
        \}\
      \},\
      "UpdateTransactionResult": \{\
        "type": "object",\
        "required": [\
          "id"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "DepartmentsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "DepartmentsResult": \{\
        "type": "object",\
        "required": [\
          "departments"\
        ],\
        "properties": \{\
          "departments": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/Department"\
            \}\
          \}\
        \}\
      \},\
      "Department": \{\
        "type": "object",\
        "required": [\
          "id",\
          "name"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "object"\
          \},\
          "name": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CreateDepartmentInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "name"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "name": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CreateDepartmentResult": \{\
        "type": "object",\
        "required": [\
          "department"\
        ],\
        "properties": \{\
          "department": \{\
            "$ref": "#/components/schemas/Department"\
          \}\
        \}\
      \},\
      "LocationsInput": \{\
        "type": "object",\
        "required": [\
          "companyId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "LocationsResult": \{\
        "type": "object",\
        "required": [\
          "locations"\
        ],\
        "properties": \{\
          "locations": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/OfficeLocation"\
            \}\
          \}\
        \}\
      \},\
      "OfficeLocation": \{\
        "type": "object",\
        "required": [\
          "id",\
          "city",\
          "state",\
          "zipCode"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "city": \{\
            "type": "string"\
          \},\
          "state": \{\
            "type": "string"\
          \},\
          "zipCode": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CreateLocationInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "city",\
          "state",\
          "zipCode"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "city": \{\
            "type": "string"\
          \},\
          "state": \{\
            "type": "string"\
          \},\
          "zipCode": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CreateLocationResult": \{\
        "type": "object",\
        "required": [\
          "location"\
        ],\
        "properties": \{\
          "location": \{\
            "$ref": "#/components/schemas/OfficeLocation"\
          \}\
        \}\
      \},\
      "CreateContractorInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "contractor"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "string"\
          \},\
          "contractor": \{\
            "$ref": "#/components/schemas/ContractorInput"\
          \}\
        \}\
      \},\
      "ContractorInput": \{\
        "type": "object",\
        "required": [\
          "firstName",\
          "lastName",\
          "startDate",\
          "type",\
          "payRate",\
          "wageType",\
          "isActive",\
          "nativeId"\
        ],\
        "properties": \{\
          "firstName": \{\
            "type": "string"\
          \},\
          "lastName": \{\
            "type": "string"\
          \},\
          "businessName": \{\
            "type": "string"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "Individual",\
              "Business"\
            ]\
          \},\
          "payRate": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "wageType": \{\
            "type": "string",\
            "enum": [\
              "Fixed",\
              "Hourly",\
              "Daily",\
              "Weekly",\
              "Monthly",\
              "Biweekly",\
              "Semimonthly",\
              "Annually",\
              "Custom"\
            ]\
          \},\
          "isActive": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "departmentId": \{\
            "type": "object"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CreateContractorResult": \{\
        "type": "object",\
        "required": [\
          "contractor"\
        ],\
        "properties": \{\
          "contractor": \{\
            "$ref": "#/components/schemas/Contractor"\
          \}\
        \}\
      \},\
      "Contractor": \{\
        "type": "object",\
        "required": [\
          "id",\
          "firstName",\
          "lastName",\
          "startDate",\
          "isActive",\
          "type",\
          "wageType",\
          "payRate"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "string"\
          \},\
          "firstName": \{\
            "type": "string"\
          \},\
          "lastName": \{\
            "type": "string"\
          \},\
          "businessName": \{\
            "type": "string"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "department": \{\
            "type": "string"\
          \},\
          "hourlyRate": \{\
            "type": "object"\
          \},\
          "isActive": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "Individual",\
              "Business"\
            ]\
          \},\
          "wageType": \{\
            "type": "string",\
            "enum": [\
              "Fixed",\
              "Hourly",\
              "Daily",\
              "Weekly",\
              "Monthly",\
              "Biweekly",\
              "Semimonthly",\
              "Annually",\
              "Custom"\
            ]\
          \},\
          "payRate": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "CreateEmployeeInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "employee"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "string"\
          \},\
          "employee": \{\
            "$ref": "#/components/schemas/EmployeeInput"\
          \}\
        \}\
      \},\
      "EmployeeInput": \{\
        "type": "object",\
        "required": [\
          "firstName",\
          "lastName",\
          "employmentType",\
          "jobTitle",\
          "startDate",\
          "officeLocationId",\
          "payRate",\
          "payFrequency",\
          "nativeId"\
        ],\
        "properties": \{\
          "firstName": \{\
            "type": "string"\
          \},\
          "lastName": \{\
            "type": "string"\
          \},\
          "employmentType": \{\
            "type": "string",\
            "enum": [\
              "FullTime",\
              "PartTime",\
              "Contractor"\
            ]\
          \},\
          "jobTitle": \{\
            "type": "string"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "officeLocationId": \{\
            "type": "object"\
          \},\
          "payRate": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "payFrequency": \{\
            "type": "string",\
            "enum": [\
              "Hour",\
              "Day",\
              "Week",\
              "Month",\
              "Year",\
              "Paycheck"\
            ]\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "terminationDate": \{\
            "type": "object"\
          \},\
          "flsaStatus": \{\
            "type": "string",\
            "enum": [\
              "Exempt",\
              "SalariedNonexempt",\
              "Nonexempt",\
              "Owner"\
            ]\
          \},\
          "departmentId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "CreateEmployeeResult": \{\
        "type": "object",\
        "required": [\
          "employee"\
        ],\
        "properties": \{\
          "employee": \{\
            "$ref": "#/components/schemas/Employee"\
          \}\
        \}\
      \},\
      "Employee": \{\
        "type": "object",\
        "required": [\
          "id",\
          "firstName",\
          "lastName",\
          "employmentType",\
          "jobTitle",\
          "startDate",\
          "employeeTerminations",\
          "officeLocation",\
          "payFrequency",\
          "payRate",\
          "terminated"\
        ],\
        "properties": \{\
          "annualCosts": \{\
            "$ref": "#/components/schemas/EmployeeAnnualCost"\
          \},\
          "id": \{\
            "type": "string"\
          \},\
          "firstName": \{\
            "type": "string"\
          \},\
          "lastName": \{\
            "type": "string"\
          \},\
          "employmentType": \{\
            "type": "string",\
            "enum": [\
              "FullTime",\
              "PartTime",\
              "Contractor"\
            ]\
          \},\
          "jobTitle": \{\
            "type": "string"\
          \},\
          "department": \{\
            "type": "string"\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "employeeTerminations": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeTermination"\
            \}\
          \},\
          "flsaStatus": \{\
            "type": "string",\
            "enum": [\
              "Exempt",\
              "SalariedNonexempt",\
              "Nonexempt",\
              "Owner"\
            ]\
          \},\
          "officeLocation": \{\
            "$ref": "#/components/schemas/OfficeLocation"\
          \},\
          "payFrequency": \{\
            "type": "string",\
            "enum": [\
              "Hour",\
              "Day",\
              "Week",\
              "Month",\
              "Year",\
              "Paycheck"\
            ]\
          \},\
          "payRate": \{\
            "type": "object"\
          \},\
          "terminated": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "EmployeeAnnualCost": \{\
        "type": "object",\
        "required": [\
          "salaryCost",\
          "burdenCost",\
          "fullyLoadedCost"\
        ],\
        "properties": \{\
          "salaryCost": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "burdenCost": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "fullyLoadedCost": \{\
            "$ref": "#/components/schemas/Money"\
          \}\
        \}\
      \},\
      "EmployeeTermination": \{\
        "type": "object",\
        "required": [\
          "terminationDate"\
        ],\
        "properties": \{\
          "terminationDate": \{\
            "type": "string",\
            "format": "date-time"\
          \}\
        \}\
      \},\
      "BenefitsInput": \{\
        "type": "object",\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "BenefitsResult": \{\
        "type": "object",\
        "required": [\
          "benefits"\
        ],\
        "properties": \{\
          "benefits": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/BenefitPolicy"\
            \}\
          \}\
        \}\
      \},\
      "BenefitPolicy": \{\
        "type": "object",\
        "required": [\
          "id",\
          "name",\
          "description",\
          "type",\
          "isPreTax",\
          "dataSource"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "object"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "medical",\
              "dental",\
              "vision",\
              "retirement",\
              "commuter",\
              "disability",\
              "life_insurance",\
              "other_non_taxable",\
              "other_taxable",\
              "unknown_benefit",\
              "student_loan"\
            ]\
          \},\
          "isPreTax": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "dataSource": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "CreateBenefitInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "nativeId",\
          "name",\
          "description",\
          "type",\
          "isPreTax"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "name": \{\
            "type": "string"\
          \},\
          "description": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "medical",\
              "dental",\
              "vision",\
              "retirement",\
              "commuter",\
              "disability",\
              "life_insurance",\
              "other_non_taxable",\
              "other_taxable",\
              "unknown_benefit",\
              "student_loan"\
            ]\
          \},\
          "isPreTax": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "CreateBenefitResult": \{\
        "type": "object",\
        "required": [\
          "benefit"\
        ],\
        "properties": \{\
          "benefit": \{\
            "$ref": "#/components/schemas/BenefitPolicy"\
          \}\
        \}\
      \},\
      "CreateDetailedPayrollInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "accountId",\
          "nativeId",\
          "withdrawalDate",\
          "checkDate",\
          "companyDebit",\
          "transactionAmounts",\
          "netPay",\
          "reimbursements",\
          "employerTaxes",\
          "employeeTaxes",\
          "employerBenefits",\
          "employeeBenefitsDeductions",\
          "isOffCycle",\
          "employeeCompensations",\
          "contractorCompensations"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "accountId": \{\
            "type": "object"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "payPeriod": \{\
            "$ref": "#/components/schemas/InclusiveLocalDateRangeInput"\
          \},\
          "withdrawalDate": \{\
            "type": "object"\
          \},\
          "checkDate": \{\
            "type": "object"\
          \},\
          "companyDebit": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "transactionAmounts": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/MoneyInput"\
            \}\
          \},\
          "netPay": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "reimbursements": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "employerTaxes": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "employeeTaxes": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "employerBenefits": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "employeeBenefitsDeductions": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "deferredPayrollTaxes": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "payrollFees": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "isOffCycle": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "employeeCompensations": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeCompensationInput"\
            \}\
          \},\
          "contractorCompensations": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/ContractorCompensationInput"\
            \}\
          \}\
        \}\
      \},\
      "InclusiveLocalDateRangeInput": \{\
        "type": "object",\
        "required": [\
          "fromInclusive",\
          "toInclusive"\
        ],\
        "properties": \{\
          "fromInclusive": \{\
            "type": "object"\
          \},\
          "toInclusive": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "EmployeeCompensationInput": \{\
        "type": "object",\
        "required": [\
          "employeeId",\
          "grossPay",\
          "netPay",\
          "reimbursements",\
          "employeeTaxes",\
          "employerTaxes",\
          "deductions",\
          "benefits",\
          "paymentMethod"\
        ],\
        "properties": \{\
          "employeeId": \{\
            "type": "object"\
          \},\
          "grossPay": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "netPay": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "reimbursements": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "employeeTaxes": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "employerTaxes": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "deductions": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeCompensationDeductionInput"\
            \}\
          \},\
          "benefits": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeCompensationBenefitInput"\
            \}\
          \},\
          "paymentMethod": \{\
            "type": "string",\
            "enum": [\
              "Check",\
              "DirectDeposit",\
              "HistoricalPayment",\
              "Correction"\
            ]\
          \}\
        \}\
      \},\
      "EmployeeCompensationDeductionInput": \{\
        "type": "object",\
        "required": [\
          "name",\
          "amount",\
          "isPreTax"\
        ],\
        "properties": \{\
          "name": \{\
            "type": "string"\
          \},\
          "amount": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "isPreTax": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "EmployeeCompensationBenefitInput": \{\
        "type": "object",\
        "required": [\
          "benefitId",\
          "employeeDeduction",\
          "companyContribution",\
          "isImputed"\
        ],\
        "properties": \{\
          "benefitId": \{\
            "type": "object"\
          \},\
          "employeeDeduction": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "companyContribution": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "isImputed": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "ContractorCompensationInput": \{\
        "type": "object",\
        "required": [\
          "contractorId",\
          "totalAmount",\
          "bonus",\
          "reimbursements"\
        ],\
        "properties": \{\
          "contractorId": \{\
            "type": "object"\
          \},\
          "totalAmount": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "bonus": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "reimbursements": \{\
            "$ref": "#/components/schemas/MoneyInput"\
          \},\
          "paymentMethod": \{\
            "type": "string",\
            "enum": [\
              "Check",\
              "DirectDeposit",\
              "HistoricalPayment",\
              "Correction"\
            ]\
          \}\
        \}\
      \},\
      "CreateDetailedPayrollResult": \{\
        "type": "object",\
        "required": [\
          "payroll"\
        ],\
        "properties": \{\
          "payroll": \{\
            "$ref": "#/components/schemas/DetailedPayroll"\
          \}\
        \}\
      \},\
      "DetailedPayroll": \{\
        "type": "object",\
        "required": [\
          "id",\
          "accountId",\
          "withdrawalDate",\
          "checkDate",\
          "companyDebit",\
          "netPay",\
          "reimbursements",\
          "employerTaxes",\
          "employeeTaxes",\
          "employerBenefits",\
          "employeeBenefitsDeductions",\
          "deferredPayrollTaxes",\
          "payrollFees",\
          "isOffCycle",\
          "employeeCompensations",\
          "contractorCompensations"\
        ],\
        "properties": \{\
          "id": \{\
            "type": "object"\
          \},\
          "accountId": \{\
            "type": "object"\
          \},\
          "nativeId": \{\
            "type": "string"\
          \},\
          "payPeriod": \{\
            "$ref": "#/components/schemas/InclusiveDateRange"\
          \},\
          "withdrawalDate": \{\
            "type": "object"\
          \},\
          "checkDate": \{\
            "type": "object"\
          \},\
          "companyDebit": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "transactionAmounts": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/Money"\
            \}\
          \},\
          "netPay": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "reimbursements": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "employerTaxes": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "employeeTaxes": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "employerBenefits": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "employeeBenefitsDeductions": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "deferredPayrollTaxes": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "payrollFees": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "isOffCycle": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "employeeCompensations": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/DetailedEmployeeCompensation"\
            \}\
          \},\
          "contractorCompensations": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/DetailedContractorCompensation"\
            \}\
          \}\
        \}\
      \},\
      "InclusiveDateRange": \{\
        "type": "object",\
        "required": [\
          "fromInclusive",\
          "toInclusive"\
        ],\
        "properties": \{\
          "from": \{\
            "type": "object"\
          \},\
          "to": \{\
            "type": "object"\
          \},\
          "fromInclusive": \{\
            "type": "object"\
          \},\
          "toInclusive": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "DetailedEmployeeCompensation": \{\
        "type": "object",\
        "required": [\
          "employeeId",\
          "grossPay",\
          "netPay",\
          "reimbursements",\
          "employeeTaxes",\
          "employerTaxes",\
          "deductions",\
          "benefits",\
          "paymentMethod"\
        ],\
        "properties": \{\
          "employeeId": \{\
            "type": "object"\
          \},\
          "grossPay": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "netPay": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "reimbursements": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "employeeTaxes": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "employerTaxes": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "deductions": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeCompensationDeduction"\
            \}\
          \},\
          "benefits": \{\
            "type": "array",\
            "items": \{\
              "$ref": "#/components/schemas/EmployeeCompensationBenefit"\
            \}\
          \},\
          "paymentMethod": \{\
            "type": "string",\
            "enum": [\
              "Check",\
              "DirectDeposit",\
              "HistoricalPayment",\
              "Correction"\
            ]\
          \}\
        \}\
      \},\
      "EmployeeCompensationDeduction": \{\
        "type": "object",\
        "required": [\
          "name",\
          "amount",\
          "isPreTax"\
        ],\
        "properties": \{\
          "name": \{\
            "type": "string"\
          \},\
          "amount": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "isPreTax": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "EmployeeCompensationBenefit": \{\
        "type": "object",\
        "required": [\
          "benefitId",\
          "employeeDeduction",\
          "companyContribution",\
          "isImputed"\
        ],\
        "properties": \{\
          "benefitId": \{\
            "type": "object"\
          \},\
          "employeeDeduction": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "companyContribution": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "isImputed": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \}\
        \}\
      \},\
      "DetailedContractorCompensation": \{\
        "type": "object",\
        "required": [\
          "contractorId",\
          "totalAmount",\
          "bonus",\
          "reimbursements"\
        ],\
        "properties": \{\
          "contractorId": \{\
            "type": "object"\
          \},\
          "totalAmount": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "bonus": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "reimbursements": \{\
            "$ref": "#/components/schemas/Money"\
          \},\
          "paymentMethod": \{\
            "type": "string",\
            "enum": [\
              "Check",\
              "DirectDeposit",\
              "HistoricalPayment",\
              "Correction"\
            ]\
          \}\
        \}\
      \},\
      "GetPayrollInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "payrollId"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "payrollId": \{\
            "type": "object"\
          \}\
        \}\
      \},\
      "GetPayrollResult": \{\
        "type": "object",\
        "required": [\
          "payroll"\
        ],\
        "properties": \{\
          "payroll": \{\
            "$ref": "#/components/schemas/DetailedPayroll"\
          \}\
        \}\
      \},\
      "LedgerReportDownloadInput": \{\
        "type": "object",\
        "required": [\
          "companyId",\
          "type",\
          "viewBy"\
        ],\
        "properties": \{\
          "companyId": \{\
            "type": "object"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "TrialBalance"\
            ]\
          \},\
          "viewBy": \{\
            "type": "string",\
            "enum": [\
              "Total",\
              "Year",\
              "Quarter",\
              "Month"\
            ]\
          \},\
          "startDate": \{\
            "type": "object"\
          \},\
          "endDate": \{\
            "type": "object"\
          \},\
          "dateMacro": \{\
            "type": "string",\
            "enum": [\
              "CurrentMonth",\
              "LastFullMonth",\
              "LastThreeMonths",\
              "LastThreeFullMonths",\
              "CurrentYear",\
              "LastYear",\
              "QuarterToDate",\
              "YearToDate"\
            ]\
          \},\
          "highWatermarkToken": \{\
            "type": "string"\
          \},\
          "level": \{\
            "type": "string",\
            "enum": [\
              "Compact",\
              "Summary",\
              "Detailed"\
            ]\
          \},\
          "basis": \{\
            "type": "string",\
            "enum": [\
              "cash",\
              "accrual"\
            ]\
          \}\
        \}\
      \},\
      "LedgerReportDownloadResult": \{\
        "type": "object",\
        "required": [\
          "title",\
          "columns",\
          "rows"\
        ],\
        "properties": \{\
          "title": \{\
            "type": "string"\
          \},\
          "columns": \{\
            "type": "array",\
            "items": \{\
              "type": "string"\
            \}\
          \},\
          "rows": \{\
            "type": "array",\
            "items": \{\
              "type": "array",\
              "items": \{\
                "type": "string"\
              \}\
            \}\
          \}\
        \}\
      \},\
      "PrefilledOnboardingInput": \{\
        "type": "object",\
        "required": [\
          "name",\
          "type",\
          "timeZone",\
          "currentUserRole",\
          "orgType"\
        ],\
        "properties": \{\
          "name": \{\
            "type": "string"\
          \},\
          "type": \{\
            "type": "string",\
            "enum": [\
              "SAAS",\
              "ECOMMERCE",\
              "MARKETPLACE",\
              "ADVERTISING",\
              "SERVICES",\
              "ENTERPRISE",\
              "FINTECH",\
              "FINTECH_CRYPTO",\
              "VIRTUAL_GOODS",\
              "CONSUMER",\
              "NOT_SURE",\
              "OTHER",\
              "AGRICULTURE_AND_FARMING",\
              "CONSTRUCTION",\
              "HEALTHCARE",\
              "HOME_SERVICES",\
              "LEGAL",\
              "MANUFACTURING",\
              "MEDIA_AND_ENTERTAINMENT",\
              "PROFESSIONAL_SERVICES",\
              "RETAIL",\
              "REAL_ESTATE",\
              "RESTAURANT",\
              "TRANSPORTATION",\
              "WHOLESALE_TRADE"\
            ]\
          \},\
          "revenueModel": \{\
            "type": "string",\
            "enum": [\
              "AnnualSubscription",\
              "MonthlySubscription",\
              "MultipleRevenueModels",\
              "NotSure",\
              "PreRevenue",\
              "ServiceBased",\
              "TransactionBased",\
              "UsageBased",\
              "Subscription",\
              "AddOns",\
              "TransactionBasedPhysical",\
              "TransactionBasedOther",\
              "Contracts",\
              "HourlyBilling",\
              "Marketplace",\
              "Commission"\
            ]\
          \},\
          "timeZone": \{\
            "type": "string"\
          \},\
          "currentUserRole": \{\
            "type": "string",\
            "enum": [\
              "Founder",\
              "CompanyEmployee",\
              "OutsourcedAccountantOrCFO"\
            ]\
          \},\
          "orgType": \{\
            "type": "string",\
            "enum": [\
              "CCorporation",\
              "LLC",\
              "Partnership",\
              "SCorporation",\
              "SoleProprietorship",\
              "ProfessionalServicesCorp",\
              "Nonprofit"\
            ]\
          \},\
          "hasHistoricalData": \{\
            "type": "boolean",\
            "requestBodySchema": \{\
              "required": [\
                "id"\
              ],\
              "properties": \{\
                "id": \{\
                  "type": "string"\
                \}\
              \}\
            \}\
          \},\
          "connectionInfo": \{\
            "$ref": "#/components/schemas/PrefilledOnboardingConnectionInfo"\
          \}\
        \}\
      \},\
      "PrefilledOnboardingConnectionInfo": \{\
        "type": "object",\
        "required": [\
          "nativeCompanyId"\
        ],\
        "properties": \{\
          "nativeCompanyId": \{\
            "type": "string"\
          \}\
        \}\
      \},\
      "PrefilledOnboardingResult": \{\
        "type": "object",\
        "required": [\
          "url"\
        ],\
        "properties": \{\
          "url": \{\
            "type": "string"\
          \}\
        \}\
      \}\
    \}\
  \}\
\}\
}
