---
components:
  schemas:
    # ENTITY TYPE
    EntityType:
      type: string
      title: EntityType
      description: >-
        The legal entity type of the company, impacting tax reporting and
        compliance.
      enum:
        - cCorp
        - llc
        - partnership
        - sCorp
        - soleProprietorship
        - professionalServiceCorporation

    # INDUSTRY
    Industry:
      type: string
      title: Industry
      description: >-
        Represents the industry or sector the company operates in.
      enum:
        - realEstate
        - restaurant
        - healthcare
        - other
        - consumerOnPremise
        - retail
        - professionalServices
        - homeServices
        - legal
        - saas
        - manufacturing
        - shortTermRental
        - construction
        - transportation
        - ecommerce
        - finance

    # CONTRACT TERMS (NEW)
    ContractTerms:
      type: object
      title: ContractTerms
      description: >-
        Defines contract-related terms associated with a billing model.
      properties:
        contractLengthMonths:
          type: integer
          description: >-
            Duration of the contract in months.
          example: 12
        paymentTerms:
          type: string
          description: >-
            Payment terms associated with the billing type.
          enum:
            - prepaid
            - postpaid
        autoRenewal:
          type: boolean
          description: >-
            Whether the contract auto-renews at the end of the term.
          example: true
        cancellationPolicy:
          type: string
          description: >-
            Policy regarding contract cancellation.
          example: "Requires 30 days' notice for termination."

    # BILLING MODEL
    BillingModel:
      type: array
      title: BillingModel
      description: >-
        Represents the types of billing structures a company can have.
      items:
        type: string
        enum:
          - annualSubscription
          - monthlySubscription
          - addOns
          - hourlyBilling
          - transactionBased
          - usageBased
          - other
          - fixedFee

    # MONETARY VALUE
    MonetaryValue:
      type: object
      title: MonetaryValue
      description: >-
        A standardized format for monetary values, including amount and
        currency.
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          format: double
          description: >-
            The monetary amount, formatted as a numeric value with up to two
            decimal places. Negative values represent credits or refunds.
          examples:
            - 1234.56
            - -500
        currency:
          type: string
          description: >-
            The currency used, following the ISO 4217 standard (e.g., USD, EUR, GBP).
          pattern: '^[A-Z]{3}$'
          examples:
            - USD
            - EUR

    # TAX RATE
    TaxRate:
      type: object
      title: TaxRate
      description: >-
        The Tax Rate model documents tax configurations for a company or firm.
        It provides details about tax rates, including their type, jurisdiction,
        calculation method, and parameters.

        **Effective Date Rules:**
        - If no `effectiveDate` is set, the tax rate is assumed to be effective as of `createdAt`.
        - If multiple tax rates have overlapping `effectiveDate` ranges, all applicable rates will be considered.
        - If `effectiveDate` is in the future, the tax rate will not be applied until that date.
        - Effective date ranges are inclusive of both start and end bounds.
        - If a tax rate is superseded by another, the superseding rate takes precedence.
      required:
        - id
        - createdAt
        - entity
        - displayName
        - jurisdictionType
        - jurisdictionName
        - calculationType
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the tax rate, auto-generated by the system.
        createdAt:
          type: string
          format: date-time
          description: >-
            The timestamp when the tax rate was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            The timestamp when the tax rate was last updated.
        entity:
          $ref: "#/components/schemas/EntityReference"
          description: >-
            The entity (Company or Firm) this tax rate applies to.
        displayName:
          type: string
          description: >-
            The display name of the tax rate, such as "California Sales Tax."
        taxType:
          type: string
          description: >-
            The type of tax associated with this rate.
          enum:
            - payroll_employer
            - payroll_withholding
            - sales_tax
            - value_added_tax
            - income_tax
            - franchise_tax
            - excise_tax
            - real_property_tax
            - customs_duty
        jurisdictionType:
          type: string
          description: >-
            The jurisdiction where this tax applies.
          enum:
            - Federal
            - State
            - City
            - County
            - Province
            - Other
        jurisdictionName:
          type: string
          description: >-
            The jurisdiction name where the tax applies, e.g., 'California'.
        calculationType:
          type: string
          description: >-
            Specifies how the tax is calculated and determines which parameters are required.
          enum:
            - percentage_flat
            - percentage_progressive
            - flat_per_tier
            - flat_per_unit
            - flat
        effectivePeriod:
          $ref: "#/components/schemas/EffectiveDate"
          description: >-
            The time period during which this tax rate is in effect.
        supersededBy:
          type: string
          description: >-
            If applicable, references the tax rate that supersedes this one. The superseding rate takes precedence.

    # COMPANY
    Company:
      type: object
      title: Company
      description: >-
        Represents a company using the platform. Includes legal, financial, and operational details.
      required:
        - id
        - name
        - entityType
        - industry
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the company.
        name:
          type: string
          description: >-
            The registered name of the company.
        entityType:
          $ref: "#/components/schemas/EntityType"
          description: >-
            The legal entity type of the company.
        billingModel:
          $ref: "#/components/schemas/BillingModel"
          description: >-
            The billing model defining the company's payment structure and subscription details.
        industry:
          $ref: "#/components/schemas/Industry"
          description: >-
            The industry or sector in which the company operates.
        address:
          type: string
          description: >-
            The companyâ€™s primary business address.
        website:
          type: string
          description: >-
            The companyâ€™s official website.

    # FIRM
    Firm:
      type: object
      title: Firm
      description: >-
        Represents an external firm providing services to client companies, such as accounting, legal, or consulting firms.
      required:
        - id
        - name
        - industry
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the firm.
        name:
          type: string
          description: >-
            The registered name of the firm.
        industry:
          type: string
          enum:
            - accounting
            - legal
            - payroll
            - consulting
            - generalBackOffice
          description: >-
            The industry or sector in which the firm operates.

    # ROLE
    Role:
      type: object
      title: Role
      description: >-
        Defines a user's role within the system, categorizing their relationship to a company or firm.
      properties:
        roleType:
          type: string
          description: >-
            The user's relationship to the company or firm.
          enum:
            - owner
            - executive
            - employee
            - contractor
            - consultant
        function:
          type: string
          description: >-
            The primary area of expertise or responsibility for the user.
          enum:
            - accounting
            - finance
            - operations
            - technology
            - legal
            - admin

    # USER
    User:
      type: object
      title: User
      description: >-
        An individual with a credential in the system. Includes details about their role and affiliation.
      required:
        - id
        - name
        - email
        - createdAt
        - role
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the user.
        name:
          type: string
          description: >-
            The full name of the user.
        email:
          type: string
          description: >-
            The email address associated with the user.
        createdAt:
          type: string
          format: date-time
          description: >-
            The date and time when the user was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            The date and time when the user was last updated.

    # PERMISSION
    Permission:
      type: object
      title: Permission
      description: >-
        Defines user access control by specifying which financial modules
        a user can interact with and their allowed actions.

        Some permissions imply additional access:
        - `finalize` â†’ automatically grants `view` and `create`
        - `edit` â†’ automatically grants `view`
        - `void` â†’ automatically grants `edit`
        - `delete` must always be explicitly assigned
      properties:
        group:
          type: string
          description: >-
            The financial data scope or module the permission applies to.
          enum:
            - financialStatements
            - generalLedger
            - bankTransactions
            - bills
            - invoices
            - inbox
        actions:
          type: array
          description: >-
            The allowed actions within the specified scope.
          items:
            type: object
            properties:
              action:
                type: string
                enum:
                  - view
                  - create
                  - finalize
                  - edit
                  - void
                  - delete
              implies:
                type: array
                description: >-
                  Actions automatically granted when this action is assigned.
                items:
                  type: string
                  enum:
                    - view
                    - create
                    - edit
        displayName:
          type: string
          description: >-
            Defines how a user is identified when performing actions or
            sending messages. Used for firm employees to send messages
            on behalf of the firm if necessary.
          enum:
            - self
            - entityName
            - other
    # PERMISSION SET
    PermissionSet:
      type: object
      title: PermissionSet
      description: >-
        Defines a set of permissions assigned to a user for a specific entity (Company or Firm).
        - A user can have multiple permission sets.
        - Each user-entity pair can have only one permission set at a time.
        - Permissions can be time-bound, allowing scheduled access changes.
      required:
        - id
        - userId
        - entityId
        - entityType
        - permissions
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the permission set.
        userId:
          type: string
          description: >-
            The user assigned to this permission set.
          $ref: "#/components/schemas/User"
        entityId:
          type: string
          description: >-
            The entity this permission set applies to.
        entityType:
          type: string
          enum:
            - company
            - firm
          description: >-
            Specifies whether this permission set applies to a Company or a Firm.
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"
          description: >-
            A list of permissions assigned to the user for this entity.
        effectivePeriod:
          $ref: "#/components/schemas/EffectiveDate"
          description: >-
            The time period during which this permission set is active.
    # ENTITY ROLE
    EntityRole:
      type: object
      title: EntityRole
      description: >-
        Defines a user's role within a specific entity (Company or Firm).
        - A user can have multiple entity roles.
        - Each user-entity pair can have only one assigned role at a time.
        - Roles can be time-bound, allowing scheduled transitions between roles.
      required:
        - id
        - userId
        - entityId
        - entityType
        - role
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the entity role assignment.
        userId:
          type: string
          description: >-
            The user assigned to this role.
          $ref: "#/components/schemas/User"
        entityId:
          type: string
          description: >-
            The entity this role applies to.
        entityType:
          type: string
          enum:
            - company
            - firm
          description: >-
            Specifies whether this role applies to a Company or a Firm.
        role:
          $ref: "#/components/schemas/Role"
          description: >-
            The userâ€™s designated role within the entity.
        effectivePeriod:
          $ref: "#/components/schemas/EffectiveDate"
          description: >-
            The time period during which this role is active.
    # EFFECTIVE DATE
    EffectiveDate:
      type: object
      title: EffectiveDate
      description: >-
        Defines the validity period for an entity (e.g., TaxRate, Reporting Class, Permissions).

        **Effective Date Rules:**
        - If no `effectiveDate` is set, the entity is assumed to be effective as of `createdAt`.
        - If multiple entities have overlapping `effectiveDate` ranges, all applicable entities will be considered.
        - If `effectiveDate` is in the future, the entity will not be applied until that date.
        - Effective date ranges are inclusive of both start and end bounds.
        - If an entity is superseded by another, the superseding entity takes precedence.

      properties:
        effectiveDate:
          type: string
          format: date-time
          description: >-
            The start date when the entity becomes active.
        expirationDate:
          type: string
          format: date-time
          description: >-
            The optional end date when the entity expires.
        supersededBy:
          type: string
          description: >-
            If applicable, references the entity that replaces this one.
    # REPORTING CLASS
    ReportingClass:
      type: object
      title: ReportingClass
      description: >-
        A Reporting Class is a grouping mechanism for Segments used to categorize
        transactions for financial reporting purposes.

        **Common Use Cases:**
        - Organizing transactions by **Department** (e.g., Sales, Marketing).
        - Classifying expenses by **Location** (e.g., East Coast, West Coast).
        - Custom classifications for advanced reporting.

      required:
        - id
        - name
        - type
        - createdAt
        - createdBy
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the Reporting Class.
        name:
          type: string
          description: >-
            The user-defined name of the Reporting Class.
        description:
          type: string
          description: >-
            An optional field providing additional details about the Reporting Class.
        type:
          type: string
          description: >-
            Specifies the classification type.
          enum:
            - location
            - department
            - custom
        effectivePeriod:
          $ref: "#/components/schemas/EffectiveDate"
          description: >-
            The time range during which the Reporting Class is valid.
        createdBy:
          $ref: "#/components/schemas/User"
          description: >-
            A reference to the user who created the Reporting Class.
        parentClass:
          $ref: "#/components/schemas/ReportingClass"
          description: >-
            (Optional) If applicable, references a parent Reporting Class for hierarchical structuring.
        segments:
          type: array
          description: >-
            List of Segments associated with this Reporting Class.
          items:
            $ref: "#/components/schemas/Segment"

    # SEGMENT
    Segment:
      type: object
      title: Segment
      description: >-
        A Segment represents a detailed subcategory within a Reporting Class, used
        to further classify financial transactions.

        Each Reporting Class consists of multiple Segments that define finer
        categorizations.

      required:
        - id
        - name
        - reportingClass
        - createdBy
        - createdAt
      properties:
        id:
          type: string
          description: >-
            A unique identifier for the Segment.
        name:
          type: string
          description: >-
            The name of the Segment within its parent Reporting Class.
        description:
          type: string
          description: >-
            (Optional) Provides additional context about the Segment.
        effectivePeriod:
          $ref: "#/components/schemas/EffectiveDate"
          description: >-
            The time range during which the Segment is valid.
        createdBy:
          $ref: "#/components/schemas/User"
          description: >-
            The user who created this Segment.
        reportingClass:
          $ref: "#/components/schemas/ReportingClass"
          description: >-
            The Reporting Class to which this Segment belongs.
        parentSegment:
          $ref: "#/components/schemas/Segment"
          description: >-
            (Optional) If applicable, references a parent Segment for hierarchical structuring.
